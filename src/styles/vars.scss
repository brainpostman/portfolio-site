//colors
$bg: #090211;
$magenta: #482e89;
$pink: #683c7b;
$lilac: #6d6bca;
$gold: #be8fc6;
$lightest: #fdf4f5;
$light: #e8a0bf;
$dark: #ba90c6;
$darkest: #c0dbea;

//fonts
$play: var(--font-play);
$rubik: var(--font-rubik);

//fonts-mixins
@mixin play-normal {
    font-family: var(--font-play), Arial, Helvetica, sans-serif;
    text-transform: uppercase;
    line-height: 125%;
    font-weight: 400;
    text-shadow: 3px 3px 0px rgba(0, 0, 0, 0.5);
}

@mixin play-bold {
    font-family: var(--font-play), Arial, Helvetica, sans-serif;
    text-transform: uppercase;
    line-height: 125%;
    font-weight: 700;
    text-shadow: 3px 3px 0px rgba(0, 0, 0, 0.5);
}

@mixin rubik-normal {
    font-family: var(--font-rubik), Arial, Helvetica, sans-serif;
    line-height: 150%;
    font-weight: 400;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.5);
}

@mixin rubik-bold {
    font-family: var(--font-rubik), Arial, Helvetica, sans-serif;
    line-height: 150%;
    font-weight: 700;
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.5);
}

.hl_darkest {
    color: $darkest;
}

.hl_dark {
    color: $dark;
}

.hl_light {
    color: $light;
}

.hl_lighest {
    color: $lightest;
}

//size

$max-width: min(1368px, 85%);
$frame-margin: 7.5vh;
$frame-margin-hor: 7.5vw;

//mixins

@mixin center-content {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin wrapper {
    max-width: $max-width;
    width: 100%;
    margin: 0 auto;
    padding: calc($frame-margin + 20px) 20px;
    height: 100%;
}

@mixin adaptive-font($font-size) {
    font-size: calc($font-size + 0.390625vw);
}

@mixin adaptive-icon($dimension) {
    width: calc($dimension + 0.390625vw);
    height: calc($dimension + 0.390625vw);
    filter: drop-shadow(2px 2px 0px rgba(0, 0, 0, 0.5));
}

@mixin separator($dimension, $thickness) {
    align-self: center;
    height: $dimension;
    width: $dimension;
    position: relative;
    &::after {
        position: absolute;
        content: "";
        height: $dimension;
        width: $thickness;
        background-color: $light;
        left: calc(($dimension - $thickness) / 2);
    }
    &::before {
        position: absolute;
        content: "";
        width: $dimension;
        height: $thickness;
        background-color: $light;
        top: calc(($dimension - $thickness) / 2);
        left: 0;
    }
}
